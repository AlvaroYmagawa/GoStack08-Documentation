import jwt from 'jsonwebtoken';

import { promisify } from 'util';

import dBConfig from '../../config/auth';

export default async (req, res, next) => {
  const authHeader = req.headers.authorization; // receive Bearer + token sended in header request 

  if (!authHeader) { 
    return res.status(401).json({ error: 'Token not provided' });
  }

  const [, token] = authHeader.split(' '); // separate the token from the Bearer and then receive in the variable token

  try {
    const decoded = promisify(jwt.verify)(token, dBConfig.secret); // Receive the values inside the token if the token matchs with the secret

    console.log(decoded);

    req.userId = decoded.id; // create a new var inside the request taht receive de id value inside the token

    return next();
  } catch (err) {
    return res.status(400).json(err);
  }
};
